{
    "pipes": [
        {
            "name": "PipeNamePipe",
            "id": "pipe-PipeNamePipe-b9aa11b908deb7104900f3e83b98979c",
            "file": "scripts/generate/templates/pipe/pipe-name.pipe.ts",
            "type": "pipe",
            "description": "<p>TODO: Write a description of the pipe.</p>\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "description": "<p>TODO: Write a description of the transform function.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 268,
                                "end": 273,
                                "flags": 0,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 262,
                                "end": 267,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                }
            ],
            "ngname": "pipeName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * TODO: Write a description of the pipe.\n */\n@Pipe({\n  name: 'pipeName',\n})\nexport class PipeNamePipe implements PipeTransform {\n    /**\n    * TODO: Write a description of the transform function.\n    * @param value string\n    */\n    transform(value: string): string {\n        return value?.toUpperCase();\n    }\n}\n"
        },
        {
            "name": "UppercasePipe",
            "id": "pipe-UppercasePipe-b0d481aa3945bd7fcc143be7d82d1f72",
            "file": "dist/front-end-library/source/pipes/uppercase/uppercase.pipe.ts",
            "type": "pipe",
            "description": "<p>Transforms a string into uppercase.</p>\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "description": "<p>Transforms a string into uppercase.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 250,
                                "end": 255,
                                "flags": 0,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 244,
                                "end": 249,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                }
            ],
            "ngname": "uppercase",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transforms a string into uppercase.\n */\n@Pipe({\n  name: 'uppercase',\n})\nexport class UppercasePipe implements PipeTransform {\n    /**\n    * Transforms a string into uppercase.\n    * @param value string\n    */\n    transform(value: string): string {\n        return value?.toUpperCase();\n    }\n}\n"
        },
        {
            "name": "UppercasePipe",
            "id": "pipe-UppercasePipe-b0d481aa3945bd7fcc143be7d82d1f72-1",
            "file": "projects/front-end-library/src/lib/pipes/uppercase/uppercase.pipe.ts",
            "type": "pipe",
            "description": "<p>Transforms a string into uppercase.</p>\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "description": "<p>Transforms a string into uppercase.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 250,
                                "end": 255,
                                "flags": 0,
                                "escapedText": "value"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 244,
                                "end": 249,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                }
            ],
            "ngname": "uppercase",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transforms a string into uppercase.\n */\n@Pipe({\n  name: 'uppercase',\n})\nexport class UppercasePipe implements PipeTransform {\n    /**\n    * Transforms a string into uppercase.\n    * @param value string\n    */\n    transform(value: string): string {\n        return value?.toUpperCase();\n    }\n}\n",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "UppercasePipe-1"
        }
    ],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-0fea860a31e38c3b3af540a394bd1667",
            "file": "e2e/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('storybook-app-root h1')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getParagraphText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6-1",
            "file": "projects/angular-showcase/e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppPage-1"
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-ed1464035516a30f8647d5e734666b34",
            "file": "dist/front-end-library/source/components/accordion/angular/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-accordion",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "description": "<p>The inner text.</p>\n",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 25,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Description of the component Accordion</p>\n",
            "rawdescription": "Description of the component Accordion",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input } from \"@angular/core\";\n\n/**\n * Description of the component Accordion\n *\n */\n \n@Component({\n  selector: \"bf-accordion\",\n  templateUrl: './accordion.component.html',\n  styleUrls: ['../common/style.scss'],\n//   encapsulation: ViewEncapsulation.None\n})\nexport class AccordionComponent implements OnInit {\n    constructor() {}\n\n    /**\n    * The inner text.\n    *\n    * @required\n    */\n    @Input() label: string;\n\n    /** Class override */\n    @Input() styleClass: string;\n\n    ngOnInit() {\n        console.log('Accordion', this);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// @import \"../../../styles/base\";\n\n// TODO: import style from variables.scss\n\n.bf-accordion {\n    padding: 1rem;\n    background-color: red;\n}",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!--\n\n    Edit this component and don't forget to delete this comment.\n    \n    In your component, the file /common/style.scss is aimed to share styles across Twig and Angular. \n    Try to use it as much as possible, in order to avoid styles for specific framework.\n\n    Command `npm run storybook` will watch all scss changes (thanks Gulp) in this project\n    and compile it to CSS, so this new Twig component will be loaded with your changes in /common/style.scss.\n    \n    Enjoy :) \n\n-->\n\n<div class='bf-accordion'>\n    {{ label }}\n    <ng-content></ng-content>\n</div>"
        },
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-ed1464035516a30f8647d5e734666b34-1",
            "file": "projects/front-end-library/src/lib/components/accordion/angular/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-accordion",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "description": "<p>The inner text.</p>\n",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 25,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Description of the component Accordion</p>\n",
            "rawdescription": "Description of the component Accordion",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input } from \"@angular/core\";\n\n/**\n * Description of the component Accordion\n *\n */\n \n@Component({\n  selector: \"bf-accordion\",\n  templateUrl: './accordion.component.html',\n  styleUrls: ['../common/style.scss'],\n//   encapsulation: ViewEncapsulation.None\n})\nexport class AccordionComponent implements OnInit {\n    constructor() {}\n\n    /**\n    * The inner text.\n    *\n    * @required\n    */\n    @Input() label: string;\n\n    /** Class override */\n    @Input() styleClass: string;\n\n    ngOnInit() {\n        console.log('Accordion', this);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// @import \"../../../styles/base\";\n\n// TODO: import style from variables.scss\n\n.bf-accordion {\n    padding: 1rem;\n    background-color: red;\n}",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AccordionComponent-1",
            "templateData": "<!--\n\n    Edit this component and don't forget to delete this comment.\n    \n    In your component, the file /common/style.scss is aimed to share styles across Twig and Angular. \n    Try to use it as much as possible, in order to avoid styles for specific framework.\n\n    Command `npm run storybook` will watch all scss changes (thanks Gulp) in this project\n    and compile it to CSS, so this new Twig component will be loaded with your changes in /common/style.scss.\n    \n    Enjoy :) \n\n-->\n\n<div class='bf-accordion'>\n    {{ label }}\n    <ng-content></ng-content>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0346ec354d3ae4d234e3a8e940d15f9f",
            "file": "projects/angular-showcase/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-showcase'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-showcase';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// @import \"node_modules/bifrost/dist/_variables.scss\";",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<style>\n    h1 {\n        margin-bottom: 3rem;\n    }\n    .stack {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n    }\n    .override {\n        background-color: green !important;\n    }\n</style>\n\n<main role=\"main\">\n    <div class='stack'>\n        <h1>Angular Showcase</h1>\n        <bf-button styleClass='override' size='sm' label='Button'></bf-button>\n        <bf-accordion styleClass='override' label='Accordion'></bf-accordion>\n    </div>\n</main>\n\n<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-3567e04f7897789a20cc74539e43d4ae",
            "file": "dist/front-end-library/source/components/button/angular/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-button",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary' || 'secondary' || 'reverse'",
                    "description": "<p>Sets the color of the button . </p>\n",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "description": "<p>Sets the button to a disabled state. </p>\n",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "fullWidth",
                    "description": "<p>Variant  </p>\n",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "description": "<p>Name of the icon </p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "label",
                    "description": "<p>The inner text of the button.</p>\n",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'' || 'sm' || 'md' || 'lg'",
                    "description": "<p>Sets the visual type of the button . </p>\n",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Handler to be called when the button is clicked by a user.</p>\n<p>Will also block the emission of the event if <code>disabled</code> is true.</p>\n",
                    "line": 50,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>API is the same between <strong>Angular</strong> and <strong>Drupal</strong>.</p>\n",
            "rawdescription": "API is the same between **Angular** and **Drupal**.",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\n\n/**\n * API is the same between **Angular** and **Drupal**.\n *\n */\n \n@Component({\n  selector: \"bf-button\",\n  templateUrl: './button.component.html',\n  styleUrls: ['../common/style.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ButtonComponent implements OnInit {\n  constructor() {}\n\n  /**\n   * The inner text of the button.\n   *\n   * @required\n   */\n  @Input() label: string;\n\n  /** Sets the button to a disabled state. */\n  @Input() disabled: boolean;\n\n  /** Sets the visual type of the button . */\n  @Input() size: string = '' || 'sm' || 'md' || 'lg';\n\n  /** Sets the color of the button . */\n  @Input() color: string = 'primary' || 'secondary' || 'reverse';\n\n  /** Variant  */\n  // @Input() variant3: string = 'business';\n\n  /** Sets the button in mobile mode (full width). */\n  @Input() fullWidth: boolean;\n\n  /** Name of the icon */\n  @Input() icon: string;\n\n  /** Class override */\n  @Input() styleClass: string;\n\n  /**\n   * Handler to be called when the button is clicked by a user.\n   *\n   * Will also block the emission of the event if `disabled` is true.\n   */\n  @Output() click: EventEmitter<boolean> = new EventEmitter();\n\n  ngOnInit() {\n      console.log('button', this);\n  }\n\n  onClick() {\n    this.click.emit(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/scss/style.scss\";",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n    type=\"button\" \n    class=\"btn {{ color ? 'btn-' + color : '' }} {{ size ? 'btn-' + size : '' }} {{ fullWidth ? 'btn-block' : '' }} {{ styleClass }}\"\n    [disabled]=\"disabled\" \n    (click)=\"onClick()\"\n>\n    {{ label }}\n    <ng-content></ng-content>\n</button>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-3567e04f7897789a20cc74539e43d4ae-1",
            "file": "projects/front-end-library/src/lib/components/button/angular/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-button",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary' || 'secondary' || 'reverse'",
                    "description": "<p>Sets the color of the button . </p>\n",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "description": "<p>Sets the button to a disabled state. </p>\n",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "fullWidth",
                    "description": "<p>Variant  </p>\n",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "description": "<p>Name of the icon </p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "label",
                    "description": "<p>The inner text of the button.</p>\n",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'' || 'sm' || 'md' || 'lg'",
                    "description": "<p>Sets the visual type of the button . </p>\n",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Handler to be called when the button is clicked by a user.</p>\n<p>Will also block the emission of the event if <code>disabled</code> is true.</p>\n",
                    "line": 50,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>API is the same between <strong>Angular</strong> and <strong>Drupal</strong>.</p>\n",
            "rawdescription": "API is the same between **Angular** and **Drupal**.",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\n\n/**\n * API is the same between **Angular** and **Drupal**.\n *\n */\n \n@Component({\n  selector: \"bf-button\",\n  templateUrl: './button.component.html',\n  styleUrls: ['../common/style.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ButtonComponent implements OnInit {\n  constructor() {}\n\n  /**\n   * The inner text of the button.\n   *\n   * @required\n   */\n  @Input() label: string;\n\n  /** Sets the button to a disabled state. */\n  @Input() disabled: boolean;\n\n  /** Sets the visual type of the button . */\n  @Input() size: string = '' || 'sm' || 'md' || 'lg';\n\n  /** Sets the color of the button . */\n  @Input() color: string = 'primary' || 'secondary' || 'reverse';\n\n  /** Variant  */\n  // @Input() variant3: string = 'business';\n\n  /** Sets the button in mobile mode (full width). */\n  @Input() fullWidth: boolean;\n\n  /** Name of the icon */\n  @Input() icon: string;\n\n  /** Class override */\n  @Input() styleClass: string;\n\n  /**\n   * Handler to be called when the button is clicked by a user.\n   *\n   * Will also block the emission of the event if `disabled` is true.\n   */\n  @Output() click: EventEmitter<boolean> = new EventEmitter();\n\n  ngOnInit() {\n      console.log('button', this);\n  }\n\n  onClick() {\n    this.click.emit(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/scss/style.scss\";",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button \n    type=\"button\" \n    class=\"btn {{ color ? 'btn-' + color : '' }} {{ size ? 'btn-' + size : '' }} {{ fullWidth ? 'btn-block' : '' }} {{ styleClass }}\"\n    [disabled]=\"disabled\" \n    (click)=\"onClick()\"\n>\n    {{ label }}\n    <ng-content></ng-content>\n</button>"
        },
        {
            "name": "ComponentNameComponent",
            "id": "component-ComponentNameComponent-6beb499264b789460ee0ad23eb8402bd",
            "file": "scripts/generate/templates/component/angular/component-name.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-component-name",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./component-name.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "description": "<p>The inner text.</p>\n",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 25,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Description of the component ComponentName</p>\n",
            "rawdescription": "Description of the component ComponentName",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\n\n/**\n * Description of the component ComponentName\n *\n */\n \n@Component({\n  selector: 'bf-component-name',\n  templateUrl: './component-name.component.html',\n  styleUrls: ['../common/style.scss'],\n//   encapsulation: ViewEncapsulation.None\n})\nexport class ComponentNameComponent implements OnInit {\n    constructor() {}\n\n    /**\n    * The inner text.\n    *\n    * @required\n    */\n    @Input() label: string;\n\n    /** Class override */\n    @Input() styleClass: string;\n\n    ngOnInit() {\n        console.log('ComponentName', this);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// @import \"../../../styles/base\";\n\n// TODO: import style from variables.scss\n\n.bf-component-name {\n    background-color: red;\n}",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!--\n\n    Edit this component and don't forget to delete this comment.\n    \n    In your component, the file /common/style.scss is aimed to share styles across Twig and Angular. \n    Try to use it as much as possible, in order to avoid styles for specific framework.\n\n    Command `npm run storybook` will watch all scss changes (thanks Gulp) in this project\n    and compile it to CSS, so this new Twig component will be loaded with your changes in /common/style.scss.\n    \n    Enjoy :) \n\n-->\n\n<div class='{{ styleClass }}'>\n    {{ label }}\n    <ng-content></ng-content>\n</div>"
        },
        {
            "name": "ContactFormComponent",
            "id": "component-ContactFormComponent-bb6e0d496666e5ea9d7c88498b5bfd6b",
            "file": "dist/front-end-library/source/templates/contact-form/angular/contact-form.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-template-contact-form",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contact-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "text",
                    "description": "<p>The inner text of the template.</p>\n",
                    "line": 22,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>For <strong>Angular</strong> only.</p>\n",
            "rawdescription": "For **Angular** only.",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\n\n/**\n * For **Angular** only.\n *\n */\n \n@Component({\n  selector: \"bf-template-contact-form\",\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['../common/style.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ContactFormComponent implements OnInit {\n  constructor() {}\n\n  /**\n   * The inner text of the template.\n   *\n   * @required\n   */\n  @Input() text: string;\n\n  /** Class override */\n  @Input() styleClass: string;\n\n  ngOnInit() {\n      console.log('contact form his', this);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n    Template Contact Form\n</div>"
        },
        {
            "name": "ContactFormComponent",
            "id": "component-ContactFormComponent-bb6e0d496666e5ea9d7c88498b5bfd6b-1",
            "file": "projects/front-end-library/src/lib/templates/contact-form/angular/contact-form.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bf-template-contact-form",
            "styleUrls": [
                "../common/style.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contact-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "styleClass",
                    "description": "<p>Class override </p>\n",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "text",
                    "description": "<p>The inner text of the template.</p>\n",
                    "line": 22,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>For <strong>Angular</strong> only.</p>\n",
            "rawdescription": "For **Angular** only.",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\n\n/**\n * For **Angular** only.\n *\n */\n \n@Component({\n  selector: \"bf-template-contact-form\",\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['../common/style.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ContactFormComponent implements OnInit {\n  constructor() {}\n\n  /**\n   * The inner text of the template.\n   *\n   * @required\n   */\n  @Input() text: string;\n\n  /** Class override */\n  @Input() styleClass: string;\n\n  ngOnInit() {\n      console.log('contact form his', this);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "../common/style.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ContactFormComponent-1",
            "templateData": "<div>\n    Template Contact Form\n</div>"
        },
        {
            "name": "TileComponent",
            "id": "component-TileComponent-0f542d2d84a22e3149fa977711359df1",
            "file": "projects/front-end-library/src/utils/tile/tile.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tile.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'tile',\n  templateUrl: './tile.html',\n  styleUrls: [],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TileComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit', this);\n  }\n\n  ngOnChanges() {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n    Tile\n</div>"
        },
        {
            "name": "TwigContainer2Component",
            "id": "component-TwigContainer2Component-b700716b926eddc1aefba37b2ffa41d1",
            "file": "projects/front-end-library/src/utils/twig-container2/twig-container.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "twig-container2",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./twig-container.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter, SecurityContext} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { isDevMode } from '@angular/core';\nimport Twig from 'twig';\n\n@Component({\n  selector: 'twig-container2',\n  templateUrl: './twig-container.html',\n  styleUrls: [],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TwigContainer2Component implements OnInit {\n  constructor(private sanitizer: DomSanitizer) {\n      console.log('isDevMode', isDevMode());\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit', this);\n\n    var twig = Twig.twig;\n    var template = twig({\n        data: 'The {{ baked_good }} is a lie.'\n    });\n\n    Twig.renderFile('button.twig', {foo:'bar'}, (err, html) => {\n        // html; // compiled string\n        console.log('renderFile err', err);\n        console.log('renderFile', html);\n    });\n\n    console.log(\n        template.render({baked_good: 'cupcake'})\n    );\n  }\n\n  ngOnChanges() {\n    console.log('ngOnChanges', this);\n    const props = this;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<style>\n    .link {\n        position: absolute;\n        top: 1rem;\n        right: 1rem;\n        opacity: .4;\n    }\n</style>\n<a class='link' href=\"{{foo.src}}\" target='_blank'>\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 1024 1024\" class=\"css-ha8kg\"><path d=\"M896.006 920c0 22.090-17.91 40-40 40h-688.006c-22.090 0-40-17.906-40-40v-549.922c-0.838-3.224-1.33-6.588-1.33-10.072 0-22.090 17.908-40.004 40-40.004h178.66c22.092 0.004 40 17.914 40 40.004 0 22.088-17.908 40-40 40h-137.33v479.996h607.998v-479.996h-138.658c-22.090 0-40-17.912-40-40 0-22.090 17.906-40.004 40-40.004h178.658c22.090 0 40 17.91 40 40v559.844c0 0.050 0.008 0.102 0.008 0.154zM665.622 200.168l-124.452-124.45c-8.042-8.042-18.65-11.912-29.186-11.674-1.612-0.034-3.222 0-4.828 0.16-0.558 0.054-1.098 0.16-1.648 0.238-0.742 0.104-1.484 0.192-2.218 0.338-0.656 0.13-1.29 0.31-1.934 0.472-0.622 0.154-1.244 0.292-1.86 0.476-0.64 0.196-1.258 0.436-1.886 0.66-0.602 0.216-1.208 0.414-1.802 0.66-0.598 0.248-1.17 0.54-1.754 0.814-0.598 0.282-1.202 0.546-1.788 0.86-0.578 0.312-1.13 0.664-1.694 1-0.552 0.332-1.116 0.644-1.654 1.006-0.67 0.448-1.3 0.942-1.942 1.426-0.394 0.302-0.806 0.576-1.196 0.894-1.046 0.858-2.052 1.768-3.008 2.726l-124.398 124.39c-15.622 15.62-15.618 40.948 0.002 56.57 15.622 15.62 40.95 15.62 56.568 0l56.164-56.166v439.426c0 22.094 17.912 40 40.002 40 22.092 0 40-17.91 40-40v-441.202l57.942 57.942c15.622 15.624 40.948 15.62 56.568 0 15.626-15.618 15.626-40.946 0.002-56.566z\" class=\"css-kqzqgg\"></path></svg>\n</a>\n\n<!-- {{iframeUrl}} -->\n<iframe #foo [src]=\"iframeUrl\" style='width: 100vw; height: 100vh;' frameBorder='0' title='Twig component container'></iframe>"
        },
        {
            "name": "TwigContainerComponent",
            "id": "component-TwigContainerComponent-cb683bf6eedc3bc0d0ccef89701a43ad",
            "file": "projects/front-end-library/src/utils/twig-container/twig-container.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "twig-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./twig-container.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elementPath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "iframeUrl",
                    "type": "SafeResourceUrl",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter, SecurityContext} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { isDevMode } from '@angular/core';\n\n@Component({\n  selector: 'twig-container',\n  templateUrl: './twig-container.html',\n  styleUrls: [],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TwigContainerComponent implements OnInit {\n  constructor(private sanitizer: DomSanitizer) {\n      console.log('isDevMode', isDevMode());\n  }\n\n  private iframeUrl: SafeResourceUrl;\n\n  private elementPath: string;\n\n  ngOnInit() {\n    console.log('ngOnInit', this);\n  }\n\n  ngOnChanges() {\n    console.log('ngOnChanges', this);\n    const props = this;\n    const paramsString = Object.keys(props).map(function(key) {\n        console.log('key', key, props[key]);\n        if (key !== 'sanitizer' && key !== 'iframeUrl') {\n            // const value = (typeof props[key] === 'object') ? JSON.stringify(props[key]) : props[key];\n            const value = props[key];\n            if (value !== '') {\n                return key + '=' + value;\n            }\n        }\n    }).join('&');\n    const baseURL = isDevMode() ? 'http://localhost:3001/' : '/'\n    const url = baseURL + 'api/twig?' + paramsString;\n    console.log('url', url);\n    this.iframeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- link to isolated component -->\n<style>\n    .link {\n        position: absolute;\n        top: 1rem;\n        right: 1rem;\n        opacity: .4;\n    }\n</style>\n<a class='link' href=\"{{foo.src}}\" target='_blank'>\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 1024 1024\" class=\"css-ha8kg\"><path d=\"M896.006 920c0 22.090-17.91 40-40 40h-688.006c-22.090 0-40-17.906-40-40v-549.922c-0.838-3.224-1.33-6.588-1.33-10.072 0-22.090 17.908-40.004 40-40.004h178.66c22.092 0.004 40 17.914 40 40.004 0 22.088-17.908 40-40 40h-137.33v479.996h607.998v-479.996h-138.658c-22.090 0-40-17.912-40-40 0-22.090 17.906-40.004 40-40.004h178.658c22.090 0 40 17.91 40 40v559.844c0 0.050 0.008 0.102 0.008 0.154zM665.622 200.168l-124.452-124.45c-8.042-8.042-18.65-11.912-29.186-11.674-1.612-0.034-3.222 0-4.828 0.16-0.558 0.054-1.098 0.16-1.648 0.238-0.742 0.104-1.484 0.192-2.218 0.338-0.656 0.13-1.29 0.31-1.934 0.472-0.622 0.154-1.244 0.292-1.86 0.476-0.64 0.196-1.258 0.436-1.886 0.66-0.602 0.216-1.208 0.414-1.802 0.66-0.598 0.248-1.17 0.54-1.754 0.814-0.598 0.282-1.202 0.546-1.788 0.86-0.578 0.312-1.13 0.664-1.694 1-0.552 0.332-1.116 0.644-1.654 1.006-0.67 0.448-1.3 0.942-1.942 1.426-0.394 0.302-0.806 0.576-1.196 0.894-1.046 0.858-2.052 1.768-3.008 2.726l-124.398 124.39c-15.622 15.62-15.618 40.948 0.002 56.57 15.622 15.62 40.95 15.62 56.568 0l56.164-56.166v439.426c0 22.094 17.912 40 40.002 40 22.092 0 40-17.91 40-40v-441.202l57.942 57.942c15.622 15.624 40.948 15.62 56.568 0 15.626-15.618 15.626-40.946 0.002-56.566z\" class=\"css-kqzqgg\"></path></svg>\n</a>\n<!-- end -->\n\n<!-- {{iframeUrl}} -->\n<iframe #foo [src]=\"iframeUrl\" style='width: 100vw; height: 100vh;' frameBorder='0' title='Twig element container'></iframe>"
        }
    ],
    "modules": [
        {
            "name": "AccordionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccordionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "Bifrost"
                        },
                        {
                            "name": "Bifrost"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContactFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContactFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContactFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContactFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentNameModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ComponentNameComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ComponentNameComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LibModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "ButtonModule"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "ButtonModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/1-overview.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/button.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/twig-test.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/1-overview.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/twig-test.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/1-overview.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/button.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/twig-test.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainer2Component,\n  props: args,\n})"
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/1-overview.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/twig-test.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainer2Component,\n  props: args,\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-showcase/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scripts/generate/templates/pipe/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n    moduleMetadata: modules,\n    template: `<div><h1>{{ text | pipeName }}</h1></div>`,\n    props: args,\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/pipes/uppercase/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n    moduleMetadata: modules,\n    template: `<div><h1>{{ text | uppercase }}</h1></div>`,\n    props: args,\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n    moduleMetadata: modules,\n    template: `<div><h1>{{ text | uppercase }}</h1></div>`,\n    props: args,\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/button.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/button.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/form-input-date/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/form-input-text/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/form-select/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/price/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/tag/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/form-input-date/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/form-input-text/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/form-select/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/tag/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "Drupal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/price/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "DrupalNative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/form-select/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "DrupalNative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/form-select/doc.stories.ts",
                "type": "",
                "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-showcase/src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-showcase/src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scripts/generate/templates/pipe/doc.stories.ts",
                "type": "object",
                "defaultValue": "{\n  declarations: [PipeNamePipe],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/pipes/uppercase/doc.stories.ts",
                "type": "object",
                "defaultValue": "{\n  declarations: [UppercasePipe],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts",
                "type": "object",
                "defaultValue": "{\n  declarations: [UppercasePipe],\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-showcase/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "dist/front-end-library/source/components/button/button.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "",
                "defaultValue": "ButtonStory.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "dist/front-end-library/source/components/1-overview.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/1-overview.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/1-overview.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "dist/front-end-library/source/components/button/button.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/button.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/button.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/button.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/button.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/button.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                }
            ],
            "dist/front-end-library/source/components/button/twig-test.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/twig-test.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/button/twig-test.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainer2Component,\n  props: args,\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/1-overview.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/1-overview.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/1-overview.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/button/button.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/button.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/button.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/button.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/button.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/button.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                }
            ],
            "projects/front-end-library/src/lib/components/button/twig-test.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/twig-test.ts",
                    "type": "",
                    "defaultValue": "ButtonStory.bind({})"
                },
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/button/twig-test.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainer2Component,\n  props: args,\n})"
                }
            ],
            "projects/angular-showcase/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-showcase/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-showcase/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/front-end-library/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/test.ts",
                    "type": "literal type"
                }
            ],
            "scripts/generate/templates/pipe/doc.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scripts/generate/templates/pipe/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n    moduleMetadata: modules,\n    template: `<div><h1>{{ text | pipeName }}</h1></div>`,\n    props: args,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scripts/generate/templates/pipe/doc.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  declarations: [PipeNamePipe],\n}"
                }
            ],
            "dist/front-end-library/source/pipes/uppercase/doc.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/pipes/uppercase/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n    moduleMetadata: modules,\n    template: `<div><h1>{{ text | uppercase }}</h1></div>`,\n    props: args,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/pipes/uppercase/doc.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  declarations: [UppercasePipe],\n}"
                }
            ],
            "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n    moduleMetadata: modules,\n    template: `<div><h1>{{ text | uppercase }}</h1></div>`,\n    props: args,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  declarations: [UppercasePipe],\n}"
                }
            ],
            "dist/front-end-library/source/components/form-input-date/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/form-input-date/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "dist/front-end-library/source/components/form-input-text/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/form-input-text/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "dist/front-end-library/source/components/form-select/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/form-select/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                },
                {
                    "name": "DrupalNative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/form-select/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "dist/front-end-library/source/components/price/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/price/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "dist/front-end-library/source/components/tag/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "dist/front-end-library/source/components/tag/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/form-input-date/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/form-input-date/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/form-input-text/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/form-input-text/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/form-select/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/form-select/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                },
                {
                    "name": "DrupalNative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/form-select/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/tag/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/tag/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "projects/front-end-library/src/lib/components/price/doc.stories.ts": [
                {
                    "name": "Drupal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/front-end-library/src/lib/components/price/doc.stories.ts",
                    "type": "",
                    "defaultValue": "(args) => ({\n  component: TwigContainerComponent,\n  props: args\n})"
                }
            ],
            "projects/angular-showcase/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-showcase/src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/angular-showcase/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-showcase/src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/angular-showcase/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 12,
        "status": "low",
        "files": [
            {
                "filePath": "dist/front-end-library/source/components/1-overview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/1-overview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/accordion/angular/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/angular/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 75,
                "coverageCount": "9/12",
                "status": "good"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/twig-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/button/twig-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/form-input-date/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/form-input-text/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/form-select/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/form-select/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DrupalNative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/price/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/components/tag/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/pipes/uppercase/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/pipes/uppercase/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "dist/front-end-library/source/pipes/uppercase/uppercase.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UppercasePipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "dist/front-end-library/source/templates/contact-form/angular/contact-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactFormComponent",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "e2e/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/angular-showcase/e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/angular-showcase/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/angular-showcase/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-showcase/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-showcase/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-showcase/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/1-overview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/1-overview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/accordion/angular/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/angular/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 75,
                "coverageCount": "9/12",
                "status": "good"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/twig-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/button/twig-test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/form-input-date/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/form-input-text/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/form-select/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/form-select/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DrupalNative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/price/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/components/tag/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drupal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/pipes/uppercase/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/lib/pipes/uppercase/uppercase.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UppercasePipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/front-end-library/src/lib/templates/contact-form/angular/contact-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactFormComponent",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "projects/front-end-library/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/utils/tile/tile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/utils/twig-container/twig-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TwigContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/front-end-library/src/utils/twig-container2/twig-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TwigContainer2Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "scripts/generate/templates/component/angular/component-name.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComponentNameComponent",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "scripts/generate/templates/pipe/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scripts/generate/templates/pipe/doc.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scripts/generate/templates/pipe/pipe-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PipeNamePipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            }
        ]
    }
}