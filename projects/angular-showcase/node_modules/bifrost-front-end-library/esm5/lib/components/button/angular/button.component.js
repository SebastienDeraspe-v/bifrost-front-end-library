var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from "@angular/core";
/**
 * API is the same between **Angular** and **Drupal**.
 *
 */
var ButtonComponent = /** @class */ (function () {
    function ButtonComponent() {
        /** Variant
          * @values csr
          */
        this.variant = '';
        /**
         * Handler to be called when the button is clicked by a user.
         *
         * Will also block the emission of the event if `disabled` is true.
         */
        this.click = new EventEmitter();
    }
    ButtonComponent.prototype.ngOnInit = function () {
        console.log('button', this);
    };
    ButtonComponent.prototype.onClick = function () {
        this.click.emit(true);
    };
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ButtonComponent.prototype, "exampleOfIgnore", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "label", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ButtonComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "color", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "variant", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ButtonComponent.prototype, "reversed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ButtonComponent.prototype, "fullWidth", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "icon", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "styleClass", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], ButtonComponent.prototype, "click", void 0);
    ButtonComponent = __decorate([
        Component({
            selector: "bf-button",
            template: "<button \n    type=\"button\" \n    class=\"\n        btn btn-md \n        {{ color ? 'btn-' + color : '' }}\n        {{ fullWidth ? 'btn-block' : '' }}\n        {{ variant ? 'btn-' + variant : '' }}\n        {{ reversed ? 'btn-reversed' : '' }}\n        {{ styleClass }}\n    \"\n    [disabled]=\"disabled\"\n    (click)=\"onClick()\"\n>\n    {{ label }}\n    <ng-content></ng-content>\n</button>",
            styles: [".btn{min-height:40px;padding:0 1.5rem;color:#050504;font-family:BlenderPro,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-size:1rem;font-weight:500;letter-spacing:1px;text-transform:uppercase}.btn[disabled]{opacity:1}.btn-primary{border:none;background-color:#ffd000}.btn-primary:hover{color:currentColor;background-color:#dab201}.btn-primary-alt{color:#fff;background-color:#060605}.btn-primary-alt:hover{background-color:#363635}.btn-primary-alt.btn-reversed{color:#060605;background-color:#fff}.btn-primary-alt.btn-reversed:hover{color:#fff;background:#363635}.btn-csr[disabled],.btn-csr[disabled]:hover,.btn-primary-alt[disabled],.btn-primary-alt[disabled]:hover,.btn-primary[disabled],.btn-primary[disabled]:hover{color:#aaaaa3;background-color:#f8f8f7}.btn-csr[disabled].btn-reversed,.btn-csr[disabled]:hover.btn-reversed,.btn-primary-alt[disabled].btn-reversed,.btn-primary-alt[disabled]:hover.btn-reversed,.btn-primary[disabled].btn-reversed,.btn-primary[disabled]:hover.btn-reversed{color:#575754;background-color:rgba(47,47,47,.5)}.btn-secondary{color:#060605;border-color:#575754;background-color:transparent;will-change:box-shadow;transition:box-shadow .1s ease-in-out}.btn-secondary:not([disabled]):hover{color:currentColor;box-shadow:inset 0 0 0 1px #363635;border-color:#363635;background-color:transparent}.btn-secondary.btn-reversed{color:#fff;border-color:#fff}.btn-secondary.btn-reversed:not([disabled]):hover{color:#fff;border-color:#fff;box-shadow:inset 0 0 0 1px #fff}.btn-secondary.btn-reversed[disabled],.btn-secondary.btn-reversed[disabled]:hover{color:#575754;background-color:transparent;border-color:#575754}.btn-secondary[disabled],.btn-secondary[disabled]:hover{color:#aaaaa3;background-color:transparent;border-color:#e0e0da}.btn-tertiary{border:none;background-color:transparent}.btn-tertiary:hover{color:currentColor;background-color:#e6e6e6}.btn-tertiary.btn-reversed{color:#fff}.btn-tertiary.btn-reversed:hover{background-color:#2f2f2f}.btn-tertiary.btn-reversed[disabled],.btn-tertiary.btn-reversed[disabled]:hover{color:#575754;background-color:rgba(47,47,47,.5)}.btn-tertiary[disabled],.btn-tertiary[disabled]:hover{color:#aaaaa3;background-color:transparent}.btn-csr{color:#fff;border:none;background-color:#0b8339}.btn-csr:hover{background-color:#0b8339}"]
        }),
        __metadata("design:paramtypes", [])
    ], ButtonComponent);
    return ButtonComponent;
}());
export { ButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2JpZnJvc3QtZnJvbnQtZW5kLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vYW5ndWxhci9idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQTZCLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWpHOzs7R0FHRztBQU9IO0lBQ0U7UUFzQkE7O1lBRUk7UUFDSyxZQUFPLEdBQVcsRUFBRSxDQUFDO1FBYzlCOzs7O1dBSUc7UUFDTyxVQUFLLEdBQTBCLElBQUksWUFBWSxFQUFFLENBQUM7SUE1QzdDLENBQUM7SUE4Q2hCLGtDQUFRLEdBQVI7UUFDSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsaUNBQU8sR0FBUDtRQUNFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUEvQ1E7UUFBUixLQUFLLEVBQUU7OzREQUEwQjtJQU16QjtRQUFSLEtBQUssRUFBRTs7a0RBQWU7SUFHZDtRQUFSLEtBQUssRUFBRTs7cURBQW1CO0lBTWxCO1FBQVIsS0FBSyxFQUFFOztrREFBZTtJQUtkO1FBQVIsS0FBSyxFQUFFOztvREFBc0I7SUFHckI7UUFBUixLQUFLLEVBQUU7O3FEQUFtQjtJQUdsQjtRQUFSLEtBQUssRUFBRTs7c0RBQW9CO0lBR25CO1FBQVIsS0FBSyxFQUFFOztpREFBYztJQUdiO1FBQVIsS0FBSyxFQUFFOzt1REFBb0I7SUFPbEI7UUFBVCxNQUFNLEVBQUU7a0NBQVEsWUFBWTtrREFBK0I7SUE3Q2pELGVBQWU7UUFMM0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFdBQVc7WUFDckIseVpBQXNDOztTQUV2QyxDQUFDOztPQUNXLGVBQWUsQ0FzRDNCO0lBQUQsc0JBQUM7Q0FBQSxBQXRERCxJQXNEQztTQXREWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXJ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbi8qKlxuICogQVBJIGlzIHRoZSBzYW1lIGJldHdlZW4gKipBbmd1bGFyKiogYW5kICoqRHJ1cGFsKiouXG4gKlxuICovXG4gXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwiYmYtYnV0dG9uXCIsXG4gIHRlbXBsYXRlVXJsOiAnLi9idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi4vY29tbW9uL3N0eWxlLnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIC8qKiBUaGlzIGlucHV0IHdpbGwgbm90IGJlIGRpc3BsYXllZCBpbiBTdG9yeWJvb2sgZG9jcy5cbiAgKiBAaWdub3JlXG4gICovXG4gIEBJbnB1dCgpIGV4YW1wbGVPZklnbm9yZTogYm9vbGVhbjtcblxuICAvKipcbiAgICogVGhlIGlubmVyIHRleHQgb2YgdGhlIGJ1dHRvbi5cbiAgICogQHJlcXVpcmVkXG4gICAqL1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKiBTZXRzIHRoZSBidXR0b24gdG8gYSBkaXNhYmxlZCBzdGF0ZS4gKi9cbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLyoqIFNldHMgdGhlIGNvbG9yIG9mIHRoZSBidXR0b24uIFxuICAgICpcbiAgICAqIEB2YWx1ZXMgcHJpbWFyeSB8IHByaW1hcnktYWx0IHwgcHJpbWFyeS1hbHQtcmV2ZXJzZWQgfCBzZWNvbmRhcnkgfCBzZWNvbmRhcnktcmV2ZXJzZWQgfCB0ZXJ0aWFyeSB8IHRlcnRpYXJ5LXJldmVyc2VkXG4gICAgKi9cbiAgQElucHV0KCkgY29sb3I6IHN0cmluZztcblxuICAvKiogVmFyaWFudCAgXG4gICAgKiBAdmFsdWVzIGNzclxuICAgICovXG4gIEBJbnB1dCgpIHZhcmlhbnQ6IHN0cmluZyA9ICcnO1xuXG4gIC8qKiBTZXRzIHRoZSBjb250cmFzdCBtb2RlLiAqL1xuICBASW5wdXQoKSByZXZlcnNlZDogYm9vbGVhbjtcblxuICAvKiogU2V0cyB0aGUgYnV0dG9uIGluIG1vYmlsZSBtb2RlIChmdWxsIHdpZHRoKS4gKi9cbiAgQElucHV0KCkgZnVsbFdpZHRoOiBib29sZWFuO1xuXG4gIC8qKiBOYW1lIG9mIHRoZSBpY29uICovXG4gIEBJbnB1dCgpIGljb246IHN0cmluZztcblxuICAvKiogQ2xhc3Mgb3ZlcnJpZGUgKi9cbiAgQElucHV0KCkgc3R5bGVDbGFzczogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBIYW5kbGVyIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZCBieSBhIHVzZXIuXG4gICAqXG4gICAqIFdpbGwgYWxzbyBibG9jayB0aGUgZW1pc3Npb24gb2YgdGhlIGV2ZW50IGlmIGBkaXNhYmxlZGAgaXMgdHJ1ZS5cbiAgICovXG4gIEBPdXRwdXQoKSBjbGljazogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIG5nT25Jbml0KCkge1xuICAgICAgY29uc29sZS5sb2coJ2J1dHRvbicsIHRoaXMpO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICB0aGlzLmNsaWNrLmVtaXQodHJ1ZSk7XG4gIH1cbn1cbiJdfQ==