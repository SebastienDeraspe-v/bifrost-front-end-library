var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ViewEncapsulation, Input, Output, EventEmitter } from "@angular/core";
/**
 * API is the same between **Angular** and **Drupal**.
 *
 */
var ButtonComponent = /** @class */ (function () {
    function ButtonComponent() {
        /** Sets the visual type of the button . */
        this.size = '' || 'sm' || 'md' || 'lg';
        /** Sets the color of the button . */
        this.color = 'primary' || 'secondary' || 'reverse';
        /** Variant  */
        this.variant = 'business';
        /**
         * Handler to be called when the button is clicked by a user.
         *
         * Will also block the emission of the event if `disabled` is true.
         */
        this.click = new EventEmitter();
    }
    ButtonComponent.prototype.ngOnInit = function () {
        console.log('button', this);
    };
    ButtonComponent.prototype.onClick = function () {
        this.click.emit(true);
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "label", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ButtonComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "color", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "variant", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ButtonComponent.prototype, "fullWidth", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "icon", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ButtonComponent.prototype, "styleClass", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], ButtonComponent.prototype, "click", void 0);
    ButtonComponent = __decorate([
        Component({
            selector: "bf-button",
            template: "<button \n    type=\"button\" \n    class=\"\n        btn \n        {{ color ? 'btn-' + color : '' }}\n        {{ size ? 'btn-' + size : '' }}\n        {{ styleClass }}\n    \"\n    [disabled]=\"disabled\" \n    (click)=\"onClick()\"\n>\n    {{ label }}\n    <ng-content></ng-content>\n</button>",
            encapsulation: ViewEncapsulation.None,
            styles: [""]
        }),
        __metadata("design:paramtypes", [])
    ], ButtonComponent);
    return ButtonComponent;
}());
export { ButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2JpZnJvc3QtZnJvbnQtZW5kLWxpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vYW5ndWxhci9idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFakc7OztHQUdHO0FBUUg7SUFDRTtRQVlBLDJDQUEyQztRQUNsQyxTQUFJLEdBQVcsRUFBRSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDO1FBRW5ELHFDQUFxQztRQUM1QixVQUFLLEdBQVcsU0FBUyxJQUFJLFdBQVcsSUFBSSxTQUFTLENBQUM7UUFFL0QsZUFBZTtRQUNOLFlBQU8sR0FBVyxVQUFVLENBQUM7UUFXdEM7Ozs7V0FJRztRQUNPLFVBQUssR0FBMEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQW5DN0MsQ0FBQztJQXFDaEIsa0NBQVEsR0FBUjtRQUNJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxpQ0FBTyxHQUFQO1FBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQXBDUTtRQUFSLEtBQUssRUFBRTs7a0RBQWU7SUFHZDtRQUFSLEtBQUssRUFBRTs7cURBQW1CO0lBR2xCO1FBQVIsS0FBSyxFQUFFOztpREFBMkM7SUFHMUM7UUFBUixLQUFLLEVBQUU7O2tEQUF1RDtJQUd0RDtRQUFSLEtBQUssRUFBRTs7b0RBQThCO0lBRzdCO1FBQVIsS0FBSyxFQUFFOztzREFBb0I7SUFHbkI7UUFBUixLQUFLLEVBQUU7O2lEQUFjO0lBR2I7UUFBUixLQUFLLEVBQUU7O3VEQUFvQjtJQU9sQjtRQUFULE1BQU0sRUFBRTtrQ0FBUSxZQUFZO2tEQUErQjtJQXBDakQsZUFBZTtRQU4zQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsV0FBVztZQUNyQixtVEFBc0M7WUFFdEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O1NBQ3RDLENBQUM7O09BQ1csZUFBZSxDQTZDM0I7SUFBRCxzQkFBQztDQUFBLEFBN0NELElBNkNDO1NBN0NZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uLCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlcn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuLyoqXG4gKiBBUEkgaXMgdGhlIHNhbWUgYmV0d2VlbiAqKkFuZ3VsYXIqKiBhbmQgKipEcnVwYWwqKi5cbiAqXG4gKi9cbiBcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJiZi1idXR0b25cIixcbiAgdGVtcGxhdGVVcmw6ICcuL2J1dHRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuLi9jb21tb24vc3R5bGUuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEJ1dHRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICAvKipcbiAgICogVGhlIGlubmVyIHRleHQgb2YgdGhlIGJ1dHRvbi5cbiAgICpcbiAgICogQHJlcXVpcmVkXG4gICAqL1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKiBTZXRzIHRoZSBidXR0b24gdG8gYSBkaXNhYmxlZCBzdGF0ZS4gKi9cbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLyoqIFNldHMgdGhlIHZpc3VhbCB0eXBlIG9mIHRoZSBidXR0b24gLiAqL1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmcgPSAnJyB8fCAnc20nIHx8ICdtZCcgfHwgJ2xnJztcblxuICAvKiogU2V0cyB0aGUgY29sb3Igb2YgdGhlIGJ1dHRvbiAuICovXG4gIEBJbnB1dCgpIGNvbG9yOiBzdHJpbmcgPSAncHJpbWFyeScgfHwgJ3NlY29uZGFyeScgfHwgJ3JldmVyc2UnO1xuXG4gIC8qKiBWYXJpYW50ICAqL1xuICBASW5wdXQoKSB2YXJpYW50OiBzdHJpbmcgPSAnYnVzaW5lc3MnO1xuXG4gIC8qKiBTZXRzIHRoZSBidXR0b24gaW4gbW9iaWxlIG1vZGUgKGZ1bGwgd2lkdGgpLiAqL1xuICBASW5wdXQoKSBmdWxsV2lkdGg6IGJvb2xlYW47XG5cbiAgLyoqIE5hbWUgb2YgdGhlIGljb24gKi9cbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuXG4gIC8qKiBDbGFzcyBvdmVycmlkZSAqL1xuICBASW5wdXQoKSBzdHlsZUNsYXNzOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEhhbmRsZXIgdG8gYmUgY2FsbGVkIHdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkIGJ5IGEgdXNlci5cbiAgICpcbiAgICogV2lsbCBhbHNvIGJsb2NrIHRoZSBlbWlzc2lvbiBvZiB0aGUgZXZlbnQgaWYgYGRpc2FibGVkYCBpcyB0cnVlLlxuICAgKi9cbiAgQE91dHB1dCgpIGNsaWNrOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgICBjb25zb2xlLmxvZygnYnV0dG9uJywgdGhpcyk7XG4gIH1cblxuICBvbkNsaWNrKCkge1xuICAgIHRoaXMuY2xpY2suZW1pdCh0cnVlKTtcbiAgfVxufVxuIl19