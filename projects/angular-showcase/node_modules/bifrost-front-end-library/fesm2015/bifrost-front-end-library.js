import { Input, Component, NgModule, EventEmitter, Output } from '@angular/core';

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * Description of the component Accordion
 *
 */
let AccordionComponent = class AccordionComponent {
    constructor() { }
    ngOnInit() {
        console.log('Accordion', this);
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], AccordionComponent.prototype, "label", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], AccordionComponent.prototype, "styleClass", void 0);
AccordionComponent = __decorate([
    Component({
        selector: "bf-accordion",
        template: "<!--\n\n    Edit this component and don't forget to delete this comment.\n    \n    In your component, the file /common/style.scss is aimed to share styles across Twig and Angular. \n    Try to use it as much as possible, in order to avoid styles for specific framework.\n\n    Command `npm run storybook` will watch all scss changes (thanks Gulp) in this project\n    and compile it to CSS, so this new Twig component will be loaded with your changes in /common/style.scss.\n    \n    Enjoy :) \n\n-->\n\n<div class='bf-accordion'>\n    {{ label }}\n    <ng-content></ng-content>\n</div>",
        styles: [".bf-accordion{padding:1rem;background-color:red}"]
    }),
    __metadata("design:paramtypes", [])
], AccordionComponent);

var __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
let AccordionModule = class AccordionModule {
};
AccordionModule = __decorate$1([
    NgModule({
        declarations: [AccordionComponent],
        imports: [],
        exports: [AccordionComponent]
    })
], AccordionModule);

var __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * API is the same between **Angular** and **Drupal**.
 *
 */
let ButtonComponent = class ButtonComponent {
    constructor() {
        /** Variant
          * @values csr
          */
        this.variant = '';
        /**
         * Handler to be called when the button is clicked by a user.
         *
         * Will also block the emission of the event if `disabled` is true.
         */
        this.click = new EventEmitter();
    }
    ngOnInit() {
        console.log('button', this);
    }
    onClick() {
        this.click.emit(true);
    }
};
__decorate$2([
    Input(),
    __metadata$1("design:type", Boolean)
], ButtonComponent.prototype, "exampleOfIgnore", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", String)
], ButtonComponent.prototype, "label", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", Boolean)
], ButtonComponent.prototype, "disabled", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", String)
], ButtonComponent.prototype, "color", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", String)
], ButtonComponent.prototype, "variant", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", Boolean)
], ButtonComponent.prototype, "reversed", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", Boolean)
], ButtonComponent.prototype, "fullWidth", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", String)
], ButtonComponent.prototype, "icon", void 0);
__decorate$2([
    Input(),
    __metadata$1("design:type", String)
], ButtonComponent.prototype, "styleClass", void 0);
__decorate$2([
    Output(),
    __metadata$1("design:type", EventEmitter)
], ButtonComponent.prototype, "click", void 0);
ButtonComponent = __decorate$2([
    Component({
        selector: "bf-button",
        template: "<button \n    type=\"button\" \n    class=\"\n        btn btn-md \n        {{ color ? 'btn-' + color : '' }}\n        {{ fullWidth ? 'btn-block' : '' }}\n        {{ variant ? 'btn-' + variant : '' }}\n        {{ reversed ? 'btn-reversed' : '' }}\n        {{ styleClass }}\n    \"\n    [disabled]=\"disabled\"\n    (click)=\"onClick()\"\n>\n    {{ label }}\n    <ng-content></ng-content>\n</button>",
        styles: [".btn{min-height:40px;padding:0 1.5rem;color:#050504;font-family:BlenderPro,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-size:1rem;font-weight:500;letter-spacing:1px;text-transform:uppercase}.btn[disabled]{opacity:1}.btn-primary{border:none;background-color:#ffd000}.btn-primary:hover{color:currentColor;background-color:#dab201}.btn-primary-alt{color:#fff;background-color:#060605}.btn-primary-alt:hover{background-color:#363635}.btn-primary-alt.btn-reversed{color:#060605;background-color:#fff}.btn-primary-alt.btn-reversed:hover{color:#fff;background:#363635}.btn-csr[disabled],.btn-csr[disabled]:hover,.btn-primary-alt[disabled],.btn-primary-alt[disabled]:hover,.btn-primary[disabled],.btn-primary[disabled]:hover{color:#aaaaa3;background-color:#f8f8f7}.btn-csr[disabled].btn-reversed,.btn-csr[disabled]:hover.btn-reversed,.btn-primary-alt[disabled].btn-reversed,.btn-primary-alt[disabled]:hover.btn-reversed,.btn-primary[disabled].btn-reversed,.btn-primary[disabled]:hover.btn-reversed{color:#575754;background-color:rgba(47,47,47,.5)}.btn-secondary{color:#060605;border-color:#575754;background-color:transparent;will-change:box-shadow;transition:box-shadow .1s ease-in-out}.btn-secondary:not([disabled]):hover{color:currentColor;box-shadow:inset 0 0 0 1px #363635;border-color:#363635;background-color:transparent}.btn-secondary.btn-reversed{color:#fff;border-color:#fff}.btn-secondary.btn-reversed:not([disabled]):hover{color:#fff;border-color:#fff;box-shadow:inset 0 0 0 1px #fff}.btn-secondary.btn-reversed[disabled],.btn-secondary.btn-reversed[disabled]:hover{color:#575754;background-color:transparent;border-color:#575754}.btn-secondary[disabled],.btn-secondary[disabled]:hover{color:#aaaaa3;background-color:transparent;border-color:#e0e0da}.btn-tertiary{border:none;background-color:transparent}.btn-tertiary:hover{color:currentColor;background-color:#e6e6e6}.btn-tertiary.btn-reversed{color:#fff}.btn-tertiary.btn-reversed:hover{background-color:#2f2f2f}.btn-tertiary.btn-reversed[disabled],.btn-tertiary.btn-reversed[disabled]:hover{color:#575754;background-color:rgba(47,47,47,.5)}.btn-tertiary[disabled],.btn-tertiary[disabled]:hover{color:#aaaaa3;background-color:transparent}.btn-csr{color:#fff;border:none;background-color:#0b8339}.btn-csr:hover{background-color:#0b8339}"]
    }),
    __metadata$1("design:paramtypes", [])
], ButtonComponent);

var __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
let ButtonModule = class ButtonModule {
};
ButtonModule = __decorate$3([
    NgModule({
        declarations: [ButtonComponent],
        imports: [],
        exports: [ButtonComponent]
    })
], ButtonModule);

var __decorate$4 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$2 = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * API is the same between **Angular** and **Drupal**.
 *
 */
let IconComponent = class IconComponent {
    constructor() { }
    ngOnInit() {
        console.log('icon', this);
    }
};
__decorate$4([
    Input(),
    __metadata$2("design:type", String)
], IconComponent.prototype, "color", void 0);
__decorate$4([
    Input(),
    __metadata$2("design:type", String)
], IconComponent.prototype, "size", void 0);
__decorate$4([
    Input(),
    __metadata$2("design:type", String)
], IconComponent.prototype, "styleClass", void 0);
IconComponent = __decorate$4([
    Component({
        selector: "bf-icon",
        template: "<svg \n    ngClass=\"\n        {{ color ? color+'' : 'svg-fill--dark' }}\n        {{ size ? 'svg-size-sm--'+size : ''}}\n        {{ styleClass }}\n    \"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 63 63\"\n>\n    <g class=\"_svg-stroke\" transform=\"translate(.301 .301)\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <g>\n            <path d=\"M39.703 23.666a8.5 8.5 0 1 1-8.5-8.5 8.259 8.259 0 0 1 8.5 8.125z\"/>\n            <path d=\"M45.179 58.989V46.145a13.744 13.744 0 0 0-13.788-13.788 13.744 13.744 0 0 0-13.788 13.788v12.844\"/>\n        </g>\n        <circle cx=\"31\" cy=\"31\" r=\"31\" transform=\"translate(.2 .2)\"/>\n    </g>\n</svg>\n"
    }),
    __metadata$2("design:paramtypes", [])
], IconComponent);

var __decorate$5 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
let IconModule = class IconModule {
};
IconModule = __decorate$5([
    NgModule({
        declarations: [IconComponent],
        imports: [],
        exports: [IconComponent]
    })
], IconModule);

/*
 * Public API Surface of front-end-library
 * NOTE: Please, do NOT remove comments: // Components, // Organisms and // Templates.
 * Because we plan to use them in `scripts/generate.js` to dynamically append the export in the right section of this file.
 */
// Organisms
// Add organisms export here
// Templates
// Add template export here
// Lib
// export * from './lib.module';

/**
 * Generated bundle index. Do not edit.
 */

export { AccordionComponent, AccordionModule, ButtonComponent, ButtonModule, IconComponent, IconModule };
//# sourceMappingURL=bifrost-front-end-library.js.map
