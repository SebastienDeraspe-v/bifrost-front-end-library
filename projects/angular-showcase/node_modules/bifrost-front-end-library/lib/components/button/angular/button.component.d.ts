import { OnInit, EventEmitter } from "@angular/core";
/**
 * API is the same between **Angular** and **Drupal**.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class ButtonComponent implements OnInit {
    constructor();
    /** This input will not be displayed in Storybook docs.
    * @ignore
    */
    exampleOfIgnore: boolean;
    /**
     * The inner text of the button.
     * @required
     */
    label: string;
    /** Sets the button to a disabled state. */
    disabled: boolean;
    /** Sets the color of the button.
      *
      * @values primary | primary-alt | primary-alt-reversed | secondary | secondary-reversed | tertiary | tertiary-reversed
      */
    color: string;
    /** Variant
      * @values csr
      */
    variant: string;
    /** Sets the contrast mode. */
    reversed: boolean;
    /** Sets the button in mobile mode (full width). */
    fullWidth: boolean;
    /** Name of the icon */
    icon: string;
    /** Class override */
    styleClass: string;
    /**
     * Handler to be called when the button is clicked by a user.
     *
     * Will also block the emission of the event if `disabled` is true.
     */
    click: EventEmitter<boolean>;
    ngOnInit(): void;
    onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ButtonComponent, "bf-button", never, { "variant": "variant"; "exampleOfIgnore": "exampleOfIgnore"; "label": "label"; "disabled": "disabled"; "color": "color"; "reversed": "reversed"; "fullWidth": "fullWidth"; "icon": "icon"; "styleClass": "styleClass"; }, { "click": "click"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJidXR0b24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbi8qKlxuICogQVBJIGlzIHRoZSBzYW1lIGJldHdlZW4gKipBbmd1bGFyKiogYW5kICoqRHJ1cGFsKiouXG4gKlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgLyoqIFRoaXMgaW5wdXQgd2lsbCBub3QgYmUgZGlzcGxheWVkIGluIFN0b3J5Ym9vayBkb2NzLlxuICAgICogQGlnbm9yZVxuICAgICovXG4gICAgZXhhbXBsZU9mSWdub3JlOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSBpbm5lciB0ZXh0IG9mIHRoZSBidXR0b24uXG4gICAgICogQHJlcXVpcmVkXG4gICAgICovXG4gICAgbGFiZWw6IHN0cmluZztcbiAgICAvKiogU2V0cyB0aGUgYnV0dG9uIHRvIGEgZGlzYWJsZWQgc3RhdGUuICovXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgLyoqIFNldHMgdGhlIGNvbG9yIG9mIHRoZSBidXR0b24uXG4gICAgICAqXG4gICAgICAqIEB2YWx1ZXMgcHJpbWFyeSB8IHByaW1hcnktYWx0IHwgcHJpbWFyeS1hbHQtcmV2ZXJzZWQgfCBzZWNvbmRhcnkgfCBzZWNvbmRhcnktcmV2ZXJzZWQgfCB0ZXJ0aWFyeSB8IHRlcnRpYXJ5LXJldmVyc2VkXG4gICAgICAqL1xuICAgIGNvbG9yOiBzdHJpbmc7XG4gICAgLyoqIFZhcmlhbnRcbiAgICAgICogQHZhbHVlcyBjc3JcbiAgICAgICovXG4gICAgdmFyaWFudDogc3RyaW5nO1xuICAgIC8qKiBTZXRzIHRoZSBjb250cmFzdCBtb2RlLiAqL1xuICAgIHJldmVyc2VkOiBib29sZWFuO1xuICAgIC8qKiBTZXRzIHRoZSBidXR0b24gaW4gbW9iaWxlIG1vZGUgKGZ1bGwgd2lkdGgpLiAqL1xuICAgIGZ1bGxXaWR0aDogYm9vbGVhbjtcbiAgICAvKiogTmFtZSBvZiB0aGUgaWNvbiAqL1xuICAgIGljb246IHN0cmluZztcbiAgICAvKiogQ2xhc3Mgb3ZlcnJpZGUgKi9cbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSGFuZGxlciB0byBiZSBjYWxsZWQgd2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWQgYnkgYSB1c2VyLlxuICAgICAqXG4gICAgICogV2lsbCBhbHNvIGJsb2NrIHRoZSBlbWlzc2lvbiBvZiB0aGUgZXZlbnQgaWYgYGRpc2FibGVkYCBpcyB0cnVlLlxuICAgICAqL1xuICAgIGNsaWNrOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBvbkNsaWNrKCk6IHZvaWQ7XG59XG4iXX0=