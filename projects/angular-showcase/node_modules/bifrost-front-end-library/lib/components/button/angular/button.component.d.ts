import { OnInit, EventEmitter } from "@angular/core";
/**
 * API is the same between **Angular** and **Drupal**.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class ButtonComponent implements OnInit {
    constructor();
    /**
     * The inner text of the button.
     *
     * @required
     */
    label: string;
    /** Sets the button to a disabled state. */
    disabled: boolean;
    /** Sets the visual type of the button . */
    size: string;
    /** Sets the color of the button . */
    color: string;
    /** Sets the button in mobile mode (full width). */
    fullWidth: boolean;
    /** Name of the icon */
    icon: string;
    /** Class override */
    styleClass: string;
    /**
     * Handler to be called when the button is clicked by a user.
     *
     * Will also block the emission of the event if `disabled` is true.
     */
    click: EventEmitter<boolean>;
    ngOnInit(): void;
    onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ButtonComponent, "lib-button", never, { "size": "size"; "color": "color"; "label": "label"; "disabled": "disabled"; "fullWidth": "fullWidth"; "icon": "icon"; "styleClass": "styleClass"; }, { "click": "click"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJidXR0b24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG4vKipcbiAqIEFQSSBpcyB0aGUgc2FtZSBiZXR3ZWVuICoqQW5ndWxhcioqIGFuZCAqKkRydXBhbCoqLlxuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBjb25zdHJ1Y3RvcigpO1xuICAgIC8qKlxuICAgICAqIFRoZSBpbm5lciB0ZXh0IG9mIHRoZSBidXR0b24uXG4gICAgICpcbiAgICAgKiBAcmVxdWlyZWRcbiAgICAgKi9cbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIC8qKiBTZXRzIHRoZSBidXR0b24gdG8gYSBkaXNhYmxlZCBzdGF0ZS4gKi9cbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICAvKiogU2V0cyB0aGUgdmlzdWFsIHR5cGUgb2YgdGhlIGJ1dHRvbiAuICovXG4gICAgc2l6ZTogc3RyaW5nO1xuICAgIC8qKiBTZXRzIHRoZSBjb2xvciBvZiB0aGUgYnV0dG9uIC4gKi9cbiAgICBjb2xvcjogc3RyaW5nO1xuICAgIC8qKiBTZXRzIHRoZSBidXR0b24gaW4gbW9iaWxlIG1vZGUgKGZ1bGwgd2lkdGgpLiAqL1xuICAgIGZ1bGxXaWR0aDogYm9vbGVhbjtcbiAgICAvKiogTmFtZSBvZiB0aGUgaWNvbiAqL1xuICAgIGljb246IHN0cmluZztcbiAgICAvKiogQ2xhc3Mgb3ZlcnJpZGUgKi9cbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSGFuZGxlciB0byBiZSBjYWxsZWQgd2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWQgYnkgYSB1c2VyLlxuICAgICAqXG4gICAgICogV2lsbCBhbHNvIGJsb2NrIHRoZSBlbWlzc2lvbiBvZiB0aGUgZXZlbnQgaWYgYGRpc2FibGVkYCBpcyB0cnVlLlxuICAgICAqL1xuICAgIGNsaWNrOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBvbkNsaWNrKCk6IHZvaWQ7XG59XG4iXX0=