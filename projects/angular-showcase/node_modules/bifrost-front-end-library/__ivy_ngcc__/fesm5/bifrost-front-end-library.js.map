{"version":3,"file":"bifrost-front-end-library.js","sources":["ng:/bifrost-front-end-library/lib/components/button/angular/button.component.ts","ng:/bifrost-front-end-library/lib/components/button/angular/button.module.ts","ng:/bifrost-front-end-library/public-api.ts","ng:/bifrost-front-end-library/bifrost-front-end-library.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAGW,IAKT;AAGG;AAGH,QAOS,SAAI,GAAW,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC;AACrD;AAEK,QAAM,UAAK,GAAW,SAAS,IAAI,WAAW,IAAI,SAAS,CAAC;AACjE;AAEK,QAAM,YAAO,GAAW,UAAU,CAAC;AACxC;AACW;AACgB;AAErB;AAIA;AAAY,QAON,UAAK,GAA0B,IAAI,YAAY,EAAE,CAAC;AAC9D,KApCkB;AAClB,IAoCE,kCAAQ,GAAR;AACD,QAAK,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AACtC,KAAG;AAEH,IAAE,iCAAO,GAAP;AACA,QAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAG;AACF,IArCU;AAAa,QAArB,KAAK,EAAE;AAAE;AAEe,kDAFF;AAEzB,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AAEY,qDAFK;AAE7B,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AACZ,iDADqD;AAErD,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AAA0C,kDAAW;AAEjE,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AAEA,oDAF4B;AAExC,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AAEW,sDAFO;AAE9B,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AAGR,iDAHoB;AAExB,IACW;AAAa,QAArB,KAAK,EAAE;AAAE;AAGI,uDAHc;AAE9B,IAKY;AAAa,QAAtB,MAAM,EAAE;AAAE,kCAAM,YAAY;AAAE,kDAA6B;AAE9D,IAtCa,eAAe,wBAN3B,SAAS,CAAC,cACT,jCAKM;IALE,EAAE,WAAW,jBAKsB,OAAhC,eAAe,CA6C3B;MAjDC;oNAAsC,cAEtC,aAAa,EAAE,iBAAiB,CAAC,IAAI;;;;;;;;;;;;4zyMACtC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA+CF;AAAC,IADD,sBAAC;AACA,CA9CD;AAAK;AAAC;AAIgB;AAOJ;AAKA;AAMhB;AACa;AAAG;AAGV,IC9BR;AAA0B,KAAG;IAAhB,YAAY,0BANxB,QAAQ,CAAC,cACR;QAAY,EAAE,CAAC,eAAe,CAAC,cAC/B,OAAO,EAAE,EACR,cACD,OAAO,EAAE,CAAC,eAAe,CAAC,UAC3B,CAAC,QACW,YAAY,CAAI;;;;;;;;;gDAC7B;AAAC,IAD2B,mBAAC;AAC5B,CADD;AAAK;ACTL;AACA;AACA;AAKA;AACA;AACA;AAEA;AAA2C;ACX3C;AACA;AACA;AACA;AACA;AACY","sourcesContent":["import { Component, ViewEncapsulation, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\n\n/**\n * API is the same between **Angular** and **Drupal**.\n *\n */\n \n@Component({\n  selector: \"bf-button\",\n  templateUrl: './button.component.html',\n  styleUrls: ['../common/style.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ButtonComponent implements OnInit {\n  constructor() {}\n\n  /**\n   * The inner text of the button.\n   *\n   * @required\n   */\n  @Input() label: string;\n\n  /** Sets the button to a disabled state. */\n  @Input() disabled: boolean;\n\n  /** Sets the visual type of the button . */\n  @Input() size: string = '' || 'sm' || 'md' || 'lg';\n\n  /** Sets the color of the button . */\n  @Input() color: string = 'primary' || 'secondary' || 'reverse';\n\n  /** Variant  */\n  @Input() variant: string = 'business';\n\n  /** Sets the button in mobile mode (full width). */\n  @Input() fullWidth: boolean;\n\n  /** Name of the icon */\n  @Input() icon: string;\n\n  /** Class override */\n  @Input() styleClass: string;\n\n  /**\n   * Handler to be called when the button is clicked by a user.\n   *\n   * Will also block the emission of the event if `disabled` is true.\n   */\n  @Output() click: EventEmitter<boolean> = new EventEmitter();\n\n  ngOnInit() {\n      console.log('button his', this);\n  }\n\n  onClick() {\n    this.click.emit(true);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [ButtonComponent],\n  imports: [\n  ],\n  exports: [ButtonComponent]\n})\nexport class ButtonModule { }\n","/*\n * Public API Surface of front-end-library\n */\n\nexport * from './lib/components/button/angular/button.component';\nexport * from './lib/components/button/angular/button.module';\n\n// TODO\n// export * from './lib/*/*.module'; ?\n// export * from './lib/lib.module';\n\n// export * from './lib/styles/base.scss';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}